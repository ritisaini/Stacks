// Stack using LinkedList
import java.util.LinkedList;
public class Stack_LL{
    static class Node{
        int data;
        Node next;
        Node(int data){
            this.data = data;
            this.next = null;
        }
    }
    static class Stack{
        static Node head = null;
    // Empty Case
    public static boolean isEmpty(){
        return head == null;
    }
    // Push Case
    public static void push(int data){
        Node newNode = new Node(data);
        if(isEmpty()){
           head = newNode;
           return;
        }
        newNode.next = head;
        head = newNode;
    }
    // Pop Case
    public static int pop(){
        if(isEmpty()){
            return -1;
        }
        int top = head.data;
        head = head.next;
        return top;
    }
    // Peek Case
    public static int peek(){
        if(isEmpty()){
            return -1;
        }
        return head.data;
    }
    }
    public static void main(String args[]){
        Stack s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);
        while(!s.isEmpty()){
            System.out.println(s.peek());
            s.pop();
        }
    }
}
// output = 3
//          2
//          1